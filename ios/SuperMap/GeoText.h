////  GeoText.h//  Visualization////  版权所有 （c）2013 北京超图软件股份有限公司。保留所有权利。//#import "Geometry.h"@class TextStyle,TextPart;/** 文本类，派生于 <Geometry> 类。 * * 该类主要用于对地物要素进行标识和必要的注记说明。文本对象由一个或多个部分组成，每个部分称为文本对象的一个子对象，每个子对象都是一个   TextPart  的实例。同一个文本对象的所有子对象都使用相同的文本风格，即使用该文本对象的文本风格进行显示。 */@interface GeoText : Geometry{ @private    NSMutableArray* _textParts;    TextStyle*      _textStyle;}/**     *  @brief 根据给定的 GeoText 对象来构造一个与其完全相同的新对象。     * @param geoText 指定的 GeoText 对象。 */- (id)initWithGeoText:(GeoText *)geoText;/**     * @brief  根据指定的参数来构造一个 GeoText 的新对象。     * @param part TextPart子对象。     * <p> 请参见： <TextPart>   */- (id)initWithTextPart:(TextPart *)part;/**     * @brief 根据指定的参数来构造一个 GeoText 的新对象。     * @param part 指定的文本子对象。     * @param style 指定的文本风格对象。 */- (id)initWithTextPart:(TextPart *)part TextStyle:(TextStyle*)style; /**     * @brief 判定该文本对象是否为空，即其子对象的个数是否为0。     *<p>  判断精度为零值判断精度。关于零值判断精度的详细信息请参见 <Environment> 类。     * @return 如果该文本对象为空，则返回 true；否则返回 false。 */- (BOOL)isEmpty;/**     * @brief 返回文本对象的内容。     * <p> 如果该对象有多个子对象时，其值为子对象字符串之和。     *     * @return 文本对象的内容。 */- (NSString *)getText; /**     *@brief  返回文本对象的子对象个数。     * <p>  当文本对象清空后，其子对象的个数为0。     * @return 文本对象的子对象个数。 */- (int)getPartCount;/**     * @brief 返回文本对象的文本风格。文本风格用于指定文本对象显示时的字体、宽度、高度和颜色等。     *   <p> <b>注意:</b> GeoText.getTextStyle().setRotation() 对文本子对象 TextPart 无效，TextPart 的旋转角度由其自身  getRotation()}和 setRotation() 方法来控制。</p>     * @return 文本对象的文本风格。     *  <p> 请参见： <TextStyle> */- (TextStyle *)getTextStyle; /**     * @brief 设置文本对象的文本风格。文本风格用于指定文本对象显示时的字体、宽度、高度和颜色等。     * <p> 注意：GeoText.getTextStyle().setRotation() 对文本子对象 TextPart 无效， TextPart TextPart  的旋转角度由其自身 getRotation() 和   setRotation()  方法来控制。</p>     * @param textStyle 文本对象的文本风格。 */- (void)setTextStyle:(TextStyle *)textStyle;/**     *@brief  在文本对象中添加文本子对象。     *     * @param part 一个 TextPart  类的文本子对象。     * @return 当添加成功则返回子对象序号，失败时返回-1。 */- (int)addPart:(TextPart *)part;/**     * @brief 返回此文本对象的指定序号的子对象。     *     * @param index 子对象序号。     * @return 指定序号的子对象。     * @exception IndexOutOfBoundsException 如果 index 小于零或 index 大于等于该文本对象的子对象个数。 */- (TextPart *)getPart:(int)index; /**     * @brief 在此文本对象的指定位置插入一个文本子对象。     *     * @param index 插入子对象的位置，即子对象的序号值。其中序号值大于0且小于子对象的总数。     * @param part 要插入的文本子对象。     * @return 如果插入成功返回 true，否则返回 false。     * @exception IndexOutOfBoundsException 如果 index 小于零或 index 大于该文本对象的子对象个数。 */- (BOOL)insertPart:(int)index TextPart:(TextPart*)part;/**     *@brief 删除此文本对象的指定序号的文本子对象。     *     * @param index 文本子对象序号。     * @return 如果删除成功返回 true，否则返回 false。     * @exception IndexOutOfBoundsException 如果 index 小于零或 index 大于等于该文本对象的子对象个数。 */- (BOOL)removePart:(int)index;/**     * @brief  修改此文本对象的指定序号的子对象，即用新的文本子对象来替换原来的文本子对象。     *     * @param index 文本子对象序号。     * @param part 文本子对象。     * @return 如果设置成功返回 true，否则返回 false。     * @exception IndexOutOfBoundsException 如果 index 小于零或 index 大于等于该文本对象的子对象个数。 */- (BOOL)setPart:(int)index TextPart:(TextPart *)part;/**     * @brief 返回当前 GeoText 对象的一个拷贝。      * @return  通过克隆操作得到的 GeoText 对象。 */- (GeoText *)clone;/**     * @brief  释放对象所占用的资源。当调用该方法之后，此对象不再可用。 */- (void)dispose;/*** @brief 获取文本对象列表。* @return 获取到的文本对象集合。*/-(NSMutableArray *)getTextPartsList;/** * @brief 返回指定的子对象在此文本对象中的序号。 * @param textPart 指定的文本子对象。 * @return 指定的子对象在此文本对象中的序号。若该子对象不存在，则返回-1。 */-(NSInteger) indexofTextPart:(TextPart*) textPart;@end